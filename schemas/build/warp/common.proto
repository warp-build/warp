syntax = "proto3";
package build.warp;

import "google/protobuf/struct.proto";

enum Goal {
  GOAL_UNKNOWN = 0;
  GOAL_BUILD = 1;
  GOAL_TEST = 2;
  GOAL_RUN = 3;
}

enum Status {
  STATUS_UNKNOWN = 0;
  STATUS_OK = 1;
  STATUS_ERR = 2;
}

message Archive {
  string url = 1;
  string sha256 = 2;
  string strip_prefix = 3;
}

message Signature {
  string name = 1;
  string rule = 2;
  repeated Requirement deps = 3;
  repeated Requirement runtime_deps = 4;
  google.protobuf.Struct config = 5;
}

message Symbol {
  oneof sym {
    bool all = 1;
    string named = 2;
  }
}

message FileRequirement {
  string path = 1;
}

message SymbolRequirement {
  string raw = 1;
  string kind = 2;
}

message RemoteRequirement {
  string name = 1;
  string url = 2;
  // The URL of the Tricorder that should be used to handle this remote requirement.
  string tricorder_url = 3;
  string subpath = 4;
}

message Requirement {
  oneof requirement {
    FileRequirement file = 1;
    SymbolRequirement symbol = 2;
    RemoteRequirement remote = 5;
  }
}


// The Dependency message is used to communicate dependencies that have already
// been resolved.
message Dependency {
  string name = 1;
  string version = 2;
  string url = 3;

  // This resolver label will be used to find out where to fetch the archive
  // that corresponds to this dependency.
  string archive_resolver = 4;

  // this resolver label will be used to generate a signature for the contents
  // of the archive.
  string signature_resolver = 5;

  // NOTE(@ostera): allow specifying a subdir within a larger archive
  string archive_subdir = 6;

  // The exact location of this dependency in the machine it is being executed.
  string store_path = 7;

  // The URL of the Tricorder that should be used to handle this dependency.
  string tricorder_url = 8;

  // A collection of strings pointing to the relative paths of the outputs this
  // dependency created. All these paths are relative to the [store_path=7].
  repeated string outputs = 9;
}

message TestMatcher {
  repeated string raw = 1;
}
