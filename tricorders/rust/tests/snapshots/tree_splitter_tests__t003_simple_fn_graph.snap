---
source: tricorders/rust/tests/tree_splitter_tests.rs
expression: ast
---
File {
    shebang: None,
    attrs: [],
    items: [
        Mod(
            ItemMod {
                attrs: [],
                vis: Inherited,
                mod_token: Mod,
                ident: Ident(
                    point,
                ),
                content: None,
                semi: Some(
                    Semi,
                ),
            },
        ),
        Verbatim(
            TokenStream [],
        ),
        Verbatim(
            TokenStream [],
        ),
        Verbatim(
            TokenStream [],
        ),
        Fn(
            ItemFn {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        test,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [],
                    },
                ],
                vis: Inherited,
                sig: Signature {
                    constness: None,
                    asyncness: None,
                    unsafety: None,
                    abi: None,
                    fn_token: Fn,
                    ident: Ident(
                        one_hundred,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    paren_token: Paren,
                    inputs: [],
                    variadic: None,
                    output: Default,
                },
                block: Block {
                    brace_token: Brace,
                    stmts: [
                        Local(
                            Local {
                                attrs: [],
                                let_token: Let,
                                pat: Ident(
                                    PatIdent {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident(
                                            a,
                                        ),
                                        subpat: None,
                                    },
                                ),
                                init: Some(
                                    (
                                        Eq,
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        add_two,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Lit(
                                                        ExprLit {
                                                            attrs: [],
                                                            lit: Int(
                                                                LitInt {
                                                                    token: 100,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ),
                                semi_token: Semi,
                            },
                        ),
                        Semi(
                            Macro(
                                ExprMacro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        assert_eq,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                        bang_token: Bang,
                                        delimiter: Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Literal {
                                                lit: 102,
                                            },
                                            Punct {
                                                char: ',',
                                                spacing: Alone,
                                            },
                                            Ident {
                                                sym: a,
                                            },
                                        ],
                                    },
                                },
                            ),
                            Semi,
                        ),
                    ],
                },
            },
        ),
    ],
}
